{"ast":null,"code":"import { Qualifier } from \"../../internal/qualifier/Qualifier\";\nimport ResizeAdvancedAction from \"./ResizeAdvancedAction\";\n/**\n * @description Defines how to crop an asset\n * @extends Actions.Resize.ResizeAdvancedAction\n * @memberOf Actions.Resize\n * @see Visit {@link Actions.Resize| Resize} for examples\n */\nclass ResizeCropAction extends ResizeAdvancedAction {\n  /**\n   * @description Horizontal position for custom-coordinates based cropping.\n   * @param {number} x The x position.\n   */\n  x(x) {\n    return this.addQualifier(new Qualifier('x', x));\n  }\n  /**\n   * @description Vertical position for custom-coordinates based cropping\n   * @param {number} y The y position.\n   */\n  y(y) {\n    return this.addQualifier(new Qualifier('y', y));\n  }\n  /**\n   * @description Controls how much of the original image surrounding the face to keep when using either the 'crop' or 'thumb' cropping modes with face detection.\n   * @param {number | string} z The zoom factor. (Default: 1.0)\n   */\n  zoom(z) {\n    return this.addQualifier(new Qualifier('z', z));\n  }\n}\nexport default ResizeCropAction;","map":{"version":3,"names":["Qualifier","ResizeAdvancedAction","ResizeCropAction","x","addQualifier","y","zoom","z"],"sources":["D:/VSCode/Project_Market_Place/client/node_modules/@cloudinary/base/actions/resize/ResizeCropAction.js"],"sourcesContent":["import { Qualifier } from \"../../internal/qualifier/Qualifier\";\nimport ResizeAdvancedAction from \"./ResizeAdvancedAction\";\n/**\n * @description Defines how to crop an asset\n * @extends Actions.Resize.ResizeAdvancedAction\n * @memberOf Actions.Resize\n * @see Visit {@link Actions.Resize| Resize} for examples\n */\nclass ResizeCropAction extends ResizeAdvancedAction {\n    /**\n     * @description Horizontal position for custom-coordinates based cropping.\n     * @param {number} x The x position.\n     */\n    x(x) {\n        return this.addQualifier(new Qualifier('x', x));\n    }\n    /**\n     * @description Vertical position for custom-coordinates based cropping\n     * @param {number} y The y position.\n     */\n    y(y) {\n        return this.addQualifier(new Qualifier('y', y));\n    }\n    /**\n     * @description Controls how much of the original image surrounding the face to keep when using either the 'crop' or 'thumb' cropping modes with face detection.\n     * @param {number | string} z The zoom factor. (Default: 1.0)\n     */\n    zoom(z) {\n        return this.addQualifier(new Qualifier('z', z));\n    }\n}\nexport default ResizeCropAction;\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,oCAAoC;AAC9D,OAAOC,oBAAoB,MAAM,wBAAwB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,gBAAgB,SAASD,oBAAoB,CAAC;EAChD;AACJ;AACA;AACA;EACIE,CAACA,CAACA,CAAC,EAAE;IACD,OAAO,IAAI,CAACC,YAAY,CAAC,IAAIJ,SAAS,CAAC,GAAG,EAAEG,CAAC,CAAC,CAAC;EACnD;EACA;AACJ;AACA;AACA;EACIE,CAACA,CAACA,CAAC,EAAE;IACD,OAAO,IAAI,CAACD,YAAY,CAAC,IAAIJ,SAAS,CAAC,GAAG,EAAEK,CAAC,CAAC,CAAC;EACnD;EACA;AACJ;AACA;AACA;EACIC,IAAIA,CAACC,CAAC,EAAE;IACJ,OAAO,IAAI,CAACH,YAAY,CAAC,IAAIJ,SAAS,CAAC,GAAG,EAAEO,CAAC,CAAC,CAAC;EACnD;AACJ;AACA,eAAeL,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}