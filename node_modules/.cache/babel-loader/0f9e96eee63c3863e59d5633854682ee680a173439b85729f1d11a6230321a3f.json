{"ast":null,"code":"import { Qualifier } from \"../../internal/qualifier/Qualifier\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue\";\nimport { Action } from \"../../internal/Action\";\n/**\n * @description Applies a cartoon effect to an image.\n * @extends SDK.Action\n * @memberOf Actions.Effect\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\nclass CartoonifyEffect extends Action {\n  constructor(effectName, strength) {\n    // We don't pass level in the constructor, we'll build it in the prepareParam\n    super();\n    this.cartoonifyStrength = strength;\n    this.effectName = effectName;\n  }\n  /**\n   * @description Sets the thickness of the lines.\n   * @param {number} lineStrength The thickness of the lines. (Range: 0 to 100, Server default: 50)\n   * @return {this}\n   */\n  lineStrength(lineStrength) {\n    this.cartoonifyStrength = lineStrength;\n    return this;\n  }\n  /**\n   * @description Achieves a black and white cartoon effect.\n   * @return {this}\n   */\n  blackwhite() {\n    this.colorReduction = 'bw';\n    return this;\n  }\n  /**\n   * @description\n   * Sets the decrease in the number of colors and corresponding saturation boost of the remaining colors. <br/>\n   * Higher reduction values result in a less realistic look.\n   * @param {number } level The decrease in the number of colors and corresponding saturation boost of the remaining colors. (Range: 0 to 100, Server default: automatically adjusts according to the line_strength value). Set to 'bw' for a black and white cartoon effect.\n   * @return {this}\n   */\n  colorReductionLevel(level) {\n    this.colorReduction = level;\n    return this;\n  }\n  prepareQualifiers() {\n    this.addQualifier(new Qualifier('e', new QualifierValue([this.effectName, this.cartoonifyStrength, this.colorReduction])));\n    return;\n  }\n}\nexport { CartoonifyEffect };","map":{"version":3,"names":["Qualifier","QualifierValue","Action","CartoonifyEffect","constructor","effectName","strength","cartoonifyStrength","lineStrength","blackwhite","colorReduction","colorReductionLevel","level","prepareQualifiers","addQualifier"],"sources":["D:/VSCode/Project_Market_Place/client/node_modules/@cloudinary/base/actions/effect/cartoonify.js"],"sourcesContent":["import { Qualifier } from \"../../internal/qualifier/Qualifier\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue\";\nimport { Action } from \"../../internal/Action\";\n/**\n * @description Applies a cartoon effect to an image.\n * @extends SDK.Action\n * @memberOf Actions.Effect\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\nclass CartoonifyEffect extends Action {\n    constructor(effectName, strength) {\n        // We don't pass level in the constructor, we'll build it in the prepareParam\n        super();\n        this.cartoonifyStrength = strength;\n        this.effectName = effectName;\n    }\n    /**\n     * @description Sets the thickness of the lines.\n     * @param {number} lineStrength The thickness of the lines. (Range: 0 to 100, Server default: 50)\n     * @return {this}\n     */\n    lineStrength(lineStrength) {\n        this.cartoonifyStrength = lineStrength;\n        return this;\n    }\n    /**\n     * @description Achieves a black and white cartoon effect.\n     * @return {this}\n     */\n    blackwhite() {\n        this.colorReduction = 'bw';\n        return this;\n    }\n    /**\n     * @description\n     * Sets the decrease in the number of colors and corresponding saturation boost of the remaining colors. <br/>\n     * Higher reduction values result in a less realistic look.\n     * @param {number } level The decrease in the number of colors and corresponding saturation boost of the remaining colors. (Range: 0 to 100, Server default: automatically adjusts according to the line_strength value). Set to 'bw' for a black and white cartoon effect.\n     * @return {this}\n     */\n    colorReductionLevel(level) {\n        this.colorReduction = level;\n        return this;\n    }\n    prepareQualifiers() {\n        this.addQualifier(new Qualifier('e', new QualifierValue([this.effectName, this.cartoonifyStrength, this.colorReduction])));\n        return;\n    }\n}\nexport { CartoonifyEffect };\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,oCAAoC;AAC9D,SAASC,cAAc,QAAQ,yCAAyC;AACxE,SAASC,MAAM,QAAQ,uBAAuB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,gBAAgB,SAASD,MAAM,CAAC;EAClCE,WAAWA,CAACC,UAAU,EAAEC,QAAQ,EAAE;IAC9B;IACA,KAAK,CAAC,CAAC;IACP,IAAI,CAACC,kBAAkB,GAAGD,QAAQ;IAClC,IAAI,CAACD,UAAU,GAAGA,UAAU;EAChC;EACA;AACJ;AACA;AACA;AACA;EACIG,YAAYA,CAACA,YAAY,EAAE;IACvB,IAAI,CAACD,kBAAkB,GAAGC,YAAY;IACtC,OAAO,IAAI;EACf;EACA;AACJ;AACA;AACA;EACIC,UAAUA,CAAA,EAAG;IACT,IAAI,CAACC,cAAc,GAAG,IAAI;IAC1B,OAAO,IAAI;EACf;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACIC,mBAAmBA,CAACC,KAAK,EAAE;IACvB,IAAI,CAACF,cAAc,GAAGE,KAAK;IAC3B,OAAO,IAAI;EACf;EACAC,iBAAiBA,CAAA,EAAG;IAChB,IAAI,CAACC,YAAY,CAAC,IAAId,SAAS,CAAC,GAAG,EAAE,IAAIC,cAAc,CAAC,CAAC,IAAI,CAACI,UAAU,EAAE,IAAI,CAACE,kBAAkB,EAAE,IAAI,CAACG,cAAc,CAAC,CAAC,CAAC,CAAC;IAC1H;EACJ;AACJ;AACA,SAASP,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}