{"ast":null,"code":"import { Action } from \"../../internal/Action\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue\";\n/**\n * @description A class to round one or more corners of an image or video.\n * @extends SDK.Action\n * @memberOf Actions.RoundCorners\n * @see Visit {@link Actions.RoundCorners|RoundCorners} for an example\n */\nclass RoundCornersAction extends Action {\n  constructor() {\n    super();\n  }\n  /**\n   * @param {number} a\n   * @param {number} b\n   * @param {number} c\n   * @param {number} d\n   * @return {RoundCornersAction}\n   */\n  radius(a, b, c, d) {\n    const qualifierValue = new QualifierValue();\n    // In case a === 0, check typeof\n    typeof a !== undefined && qualifierValue.addValue(a);\n    typeof b !== undefined && qualifierValue.addValue(b);\n    typeof c !== undefined && qualifierValue.addValue(c);\n    typeof d !== undefined && qualifierValue.addValue(d);\n    this.addQualifier(new Qualifier('r').addValue(qualifierValue));\n    return this;\n  }\n  /**\n   * @description Applies maximum rounding to the corners of the asset. An asset with square dimensions becomes a circle.\n   */\n  max() {\n    return this.addQualifier(new Qualifier('r', 'max'));\n  }\n}\nexport default RoundCornersAction;","map":{"version":3,"names":["Action","Qualifier","QualifierValue","RoundCornersAction","constructor","radius","a","b","c","d","qualifierValue","undefined","addValue","addQualifier","max"],"sources":["D:/VSCode/Project_Market_Place/client/node_modules/@cloudinary/base/actions/roundCorners/RoundCornersAction.js"],"sourcesContent":["import { Action } from \"../../internal/Action\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue\";\n/**\n * @description A class to round one or more corners of an image or video.\n * @extends SDK.Action\n * @memberOf Actions.RoundCorners\n * @see Visit {@link Actions.RoundCorners|RoundCorners} for an example\n */\nclass RoundCornersAction extends Action {\n    constructor() {\n        super();\n    }\n    /**\n     * @param {number} a\n     * @param {number} b\n     * @param {number} c\n     * @param {number} d\n     * @return {RoundCornersAction}\n     */\n    radius(a, b, c, d) {\n        const qualifierValue = new QualifierValue();\n        // In case a === 0, check typeof\n        typeof a !== undefined && qualifierValue.addValue(a);\n        typeof b !== undefined && qualifierValue.addValue(b);\n        typeof c !== undefined && qualifierValue.addValue(c);\n        typeof d !== undefined && qualifierValue.addValue(d);\n        this.addQualifier(new Qualifier('r').addValue(qualifierValue));\n        return this;\n    }\n    /**\n     * @description Applies maximum rounding to the corners of the asset. An asset with square dimensions becomes a circle.\n     */\n    max() {\n        return this.addQualifier(new Qualifier('r', 'max'));\n    }\n}\nexport default RoundCornersAction;\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,uBAAuB;AAC9C,SAASC,SAAS,QAAQ,oCAAoC;AAC9D,SAASC,cAAc,QAAQ,yCAAyC;AACxE;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,kBAAkB,SAASH,MAAM,CAAC;EACpCI,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC,CAAC;EACX;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACIC,MAAMA,CAACC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAE;IACf,MAAMC,cAAc,GAAG,IAAIR,cAAc,CAAC,CAAC;IAC3C;IACA,OAAOI,CAAC,KAAKK,SAAS,IAAID,cAAc,CAACE,QAAQ,CAACN,CAAC,CAAC;IACpD,OAAOC,CAAC,KAAKI,SAAS,IAAID,cAAc,CAACE,QAAQ,CAACL,CAAC,CAAC;IACpD,OAAOC,CAAC,KAAKG,SAAS,IAAID,cAAc,CAACE,QAAQ,CAACJ,CAAC,CAAC;IACpD,OAAOC,CAAC,KAAKE,SAAS,IAAID,cAAc,CAACE,QAAQ,CAACH,CAAC,CAAC;IACpD,IAAI,CAACI,YAAY,CAAC,IAAIZ,SAAS,CAAC,GAAG,CAAC,CAACW,QAAQ,CAACF,cAAc,CAAC,CAAC;IAC9D,OAAO,IAAI;EACf;EACA;AACJ;AACA;EACII,GAAGA,CAAA,EAAG;IACF,OAAO,IAAI,CAACD,YAAY,CAAC,IAAIZ,SAAS,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;EACvD;AACJ;AACA,eAAeE,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}