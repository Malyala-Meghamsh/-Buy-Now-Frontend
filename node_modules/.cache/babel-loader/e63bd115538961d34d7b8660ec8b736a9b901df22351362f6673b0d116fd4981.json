{"ast":null,"code":"import { QualifierValue } from \"../../internal/qualifier/QualifierValue\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier\";\nimport { DeliveryAction } from \"./DeliveryAction\";\n/**\n * @description Controls the quality of the delivered image or video.\n * @memberOf Actions.Delivery\n * @extends {Actions.Delivery.DeliveryAction}\n * @see Visit {@link Actions.Delivery|Delivery} for an example\n */\nclass DeliveryQualityAction extends DeliveryAction {\n  /**\n   * @param {Qualifiers.Quality} qualityValue a Quality value\n   */\n  constructor(qualityValue) {\n    super('q', qualityValue.toString());\n    this.qualityValue = qualityValue;\n  }\n  /**\n   * Selet the Chroma sub sampling</br>\n   * <b>Learn more</b>: {@link https://cloudinary.com/documentation/image_transformations#toggling_chroma_subsampling | Toggling chroma subsampling}\n   * @param {420 | 444 | number} type The chroma sub sampling type\n   */\n  chromaSubSampling(type) {\n    const qualityWithSubSampling = new QualifierValue([this.qualityValue, type]);\n    qualityWithSubSampling.setDelimiter(':');\n    // We either have chroma or quantization, but not both\n    return this.addQualifier(new Qualifier('q', qualityWithSubSampling));\n  }\n  /**\n   * Controls the final quality by setting a maximum quantization percentage\n   * @param {number} val\n   */\n  quantization(val) {\n    const qualityWithQuantization = new QualifierValue([this.qualityValue, `qmax_${val}`]);\n    qualityWithQuantization.setDelimiter(':');\n    // We either have chroma or quantization, but not both\n    return this.addQualifier(new Qualifier('q', qualityWithQuantization));\n  }\n}\nexport { DeliveryQualityAction };","map":{"version":3,"names":["QualifierValue","Qualifier","DeliveryAction","DeliveryQualityAction","constructor","qualityValue","toString","chromaSubSampling","type","qualityWithSubSampling","setDelimiter","addQualifier","quantization","val","qualityWithQuantization"],"sources":["D:/VSCode/Project_Market_Place/client/node_modules/@cloudinary/base/actions/delivery/DeliveryQuality.js"],"sourcesContent":["import { QualifierValue } from \"../../internal/qualifier/QualifierValue\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier\";\nimport { DeliveryAction } from \"./DeliveryAction\";\n/**\n * @description Controls the quality of the delivered image or video.\n * @memberOf Actions.Delivery\n * @extends {Actions.Delivery.DeliveryAction}\n * @see Visit {@link Actions.Delivery|Delivery} for an example\n */\nclass DeliveryQualityAction extends DeliveryAction {\n    /**\n     * @param {Qualifiers.Quality} qualityValue a Quality value\n     */\n    constructor(qualityValue) {\n        super('q', qualityValue.toString());\n        this.qualityValue = qualityValue;\n    }\n    /**\n     * Selet the Chroma sub sampling</br>\n     * <b>Learn more</b>: {@link https://cloudinary.com/documentation/image_transformations#toggling_chroma_subsampling | Toggling chroma subsampling}\n     * @param {420 | 444 | number} type The chroma sub sampling type\n     */\n    chromaSubSampling(type) {\n        const qualityWithSubSampling = new QualifierValue([this.qualityValue, type]);\n        qualityWithSubSampling.setDelimiter(':');\n        // We either have chroma or quantization, but not both\n        return this.addQualifier(new Qualifier('q', qualityWithSubSampling));\n    }\n    /**\n     * Controls the final quality by setting a maximum quantization percentage\n     * @param {number} val\n     */\n    quantization(val) {\n        const qualityWithQuantization = new QualifierValue([this.qualityValue, `qmax_${val}`]);\n        qualityWithQuantization.setDelimiter(':');\n        // We either have chroma or quantization, but not both\n        return this.addQualifier(new Qualifier('q', qualityWithQuantization));\n    }\n}\nexport { DeliveryQualityAction };\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,yCAAyC;AACxE,SAASC,SAAS,QAAQ,oCAAoC;AAC9D,SAASC,cAAc,QAAQ,kBAAkB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,qBAAqB,SAASD,cAAc,CAAC;EAC/C;AACJ;AACA;EACIE,WAAWA,CAACC,YAAY,EAAE;IACtB,KAAK,CAAC,GAAG,EAAEA,YAAY,CAACC,QAAQ,CAAC,CAAC,CAAC;IACnC,IAAI,CAACD,YAAY,GAAGA,YAAY;EACpC;EACA;AACJ;AACA;AACA;AACA;EACIE,iBAAiBA,CAACC,IAAI,EAAE;IACpB,MAAMC,sBAAsB,GAAG,IAAIT,cAAc,CAAC,CAAC,IAAI,CAACK,YAAY,EAAEG,IAAI,CAAC,CAAC;IAC5EC,sBAAsB,CAACC,YAAY,CAAC,GAAG,CAAC;IACxC;IACA,OAAO,IAAI,CAACC,YAAY,CAAC,IAAIV,SAAS,CAAC,GAAG,EAAEQ,sBAAsB,CAAC,CAAC;EACxE;EACA;AACJ;AACA;AACA;EACIG,YAAYA,CAACC,GAAG,EAAE;IACd,MAAMC,uBAAuB,GAAG,IAAId,cAAc,CAAC,CAAC,IAAI,CAACK,YAAY,EAAG,QAAOQ,GAAI,EAAC,CAAC,CAAC;IACtFC,uBAAuB,CAACJ,YAAY,CAAC,GAAG,CAAC;IACzC;IACA,OAAO,IAAI,CAACC,YAAY,CAAC,IAAIV,SAAS,CAAC,GAAG,EAAEa,uBAAuB,CAAC,CAAC;EACzE;AACJ;AACA,SAASX,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}