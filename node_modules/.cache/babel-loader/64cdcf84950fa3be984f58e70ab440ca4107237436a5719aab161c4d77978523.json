{"ast":null,"code":"import { LeveledEffectAction } from \"../EffectActions/LeveledEffectAction\";\nimport { Qualifier } from \"../../../internal/qualifier/Qualifier\";\nimport { QualifierValue } from \"../../../internal/qualifier/QualifierValue\";\nimport { prepareColor } from \"../../../internal/utils/prepareColor\";\n/**\n * @description Makes the background of the image transparent (or solid white for formats that do not support transparency).\n * @extends LeveledEffectAction\n * @memberOf Actions.Effect\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\nclass MakeTransparentEffectAction extends LeveledEffectAction {\n  /**\n   * @description Sets the tolerance used to accommodate variance in the background color.\n   * @param {number | string} value The tolerance used to accommodate variance in the background color. (Range: 0 to 100, Server default: 10)\n   */\n  tolerance(value) {\n    return this.setLevel(value);\n  }\n  /**\n   * @description Sets the color to make transparent.\n   * @param {string} color The HTML name of the color (red, green, etc.) or RGB hex code.\n   * @return {this}\n   */\n  colorToReplace(color) {\n    return this.addQualifier(new Qualifier('co', new QualifierValue(prepareColor(color))));\n  }\n}\nexport { MakeTransparentEffectAction };","map":{"version":3,"names":["LeveledEffectAction","Qualifier","QualifierValue","prepareColor","MakeTransparentEffectAction","tolerance","value","setLevel","colorToReplace","color","addQualifier"],"sources":["D:/VSCode/Project_Market_Place/client/node_modules/@cloudinary/base/actions/effect/leveled/makeTransparent.js"],"sourcesContent":["import { LeveledEffectAction } from \"../EffectActions/LeveledEffectAction\";\nimport { Qualifier } from \"../../../internal/qualifier/Qualifier\";\nimport { QualifierValue } from \"../../../internal/qualifier/QualifierValue\";\nimport { prepareColor } from \"../../../internal/utils/prepareColor\";\n/**\n * @description Makes the background of the image transparent (or solid white for formats that do not support transparency).\n * @extends LeveledEffectAction\n * @memberOf Actions.Effect\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\nclass MakeTransparentEffectAction extends LeveledEffectAction {\n    /**\n     * @description Sets the tolerance used to accommodate variance in the background color.\n     * @param {number | string} value The tolerance used to accommodate variance in the background color. (Range: 0 to 100, Server default: 10)\n     */\n    tolerance(value) {\n        return this.setLevel(value);\n    }\n    /**\n     * @description Sets the color to make transparent.\n     * @param {string} color The HTML name of the color (red, green, etc.) or RGB hex code.\n     * @return {this}\n     */\n    colorToReplace(color) {\n        return this.addQualifier(new Qualifier('co', new QualifierValue(prepareColor(color))));\n    }\n}\nexport { MakeTransparentEffectAction };\n"],"mappings":"AAAA,SAASA,mBAAmB,QAAQ,sCAAsC;AAC1E,SAASC,SAAS,QAAQ,uCAAuC;AACjE,SAASC,cAAc,QAAQ,4CAA4C;AAC3E,SAASC,YAAY,QAAQ,sCAAsC;AACnE;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,2BAA2B,SAASJ,mBAAmB,CAAC;EAC1D;AACJ;AACA;AACA;EACIK,SAASA,CAACC,KAAK,EAAE;IACb,OAAO,IAAI,CAACC,QAAQ,CAACD,KAAK,CAAC;EAC/B;EACA;AACJ;AACA;AACA;AACA;EACIE,cAAcA,CAACC,KAAK,EAAE;IAClB,OAAO,IAAI,CAACC,YAAY,CAAC,IAAIT,SAAS,CAAC,IAAI,EAAE,IAAIC,cAAc,CAACC,YAAY,CAACM,KAAK,CAAC,CAAC,CAAC,CAAC;EAC1F;AACJ;AACA,SAASL,2BAA2B"},"metadata":{},"sourceType":"module","externalDependencies":[]}