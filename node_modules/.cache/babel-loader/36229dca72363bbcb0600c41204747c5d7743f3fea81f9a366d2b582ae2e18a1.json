{"ast":null,"code":"import { BaseSource } from \"../BaseSource\";\n/**\n * @memberOf Qualifiers.Source\n * @extends {Qualifiers.Source.BaseSource}\n * @description Defines how to manipulate an image layer\n * <div class=\"panel panel-warning\">\n *   <div class=\"panel-heading\">Notice</div>\n *   <div class=\"panel-body\">\n *     This class is used as a Qualifier for the asset.overlay() and asset.underlay() methods.</br>\n *     You can find regular images and videos transformations below:\n *   </div>\n  *   <ul>\n *     <li>{@link SDK.ImageTransformation| Image Transformations}</li>\n *     <li>{@link SDK.VideoTransformation| Video Transformations}\n *   </ul>\n * </div>\n */\nclass ImageSource extends BaseSource {\n  constructor(publicID) {\n    super();\n    this._publicID = publicID;\n  }\n  /**\n   * @description\n   * Returns the opening string of the layer,\n   * This method is used internally within {@link SDK.LayerAction|LayerAction}\n   * @returns {string}\n   */\n  getOpenSourceString(layerType) {\n    const encodedPublicID = this.encodeAssetPublicID(this._publicID);\n    if (this._format) {\n      return `${layerType}_${encodedPublicID}.${this._format.toString()}`;\n    } else {\n      return `${layerType}_${encodedPublicID}`;\n    }\n  }\n  /**\n   * @description\n   * Apply a format for the image source of the layer\n   * @param {FormatQualifier} format A to apply to the layered image, see more {@link Qualifiers.Format|here}\n   * @returns {this}\n   */\n  format(format) {\n    this._format = format;\n    return this;\n  }\n}\nexport { ImageSource };","map":{"version":3,"names":["BaseSource","ImageSource","constructor","publicID","_publicID","getOpenSourceString","layerType","encodedPublicID","encodeAssetPublicID","_format","toString","format"],"sources":["D:/VSCode/Project_Market_Place/client/node_modules/@cloudinary/base/qualifiers/source/sourceTypes/ImageSource.js"],"sourcesContent":["import { BaseSource } from \"../BaseSource\";\n/**\n * @memberOf Qualifiers.Source\n * @extends {Qualifiers.Source.BaseSource}\n * @description Defines how to manipulate an image layer\n * <div class=\"panel panel-warning\">\n *   <div class=\"panel-heading\">Notice</div>\n *   <div class=\"panel-body\">\n *     This class is used as a Qualifier for the asset.overlay() and asset.underlay() methods.</br>\n *     You can find regular images and videos transformations below:\n *   </div>\n  *   <ul>\n *     <li>{@link SDK.ImageTransformation| Image Transformations}</li>\n *     <li>{@link SDK.VideoTransformation| Video Transformations}\n *   </ul>\n * </div>\n */\nclass ImageSource extends BaseSource {\n    constructor(publicID) {\n        super();\n        this._publicID = publicID;\n    }\n    /**\n     * @description\n     * Returns the opening string of the layer,\n     * This method is used internally within {@link SDK.LayerAction|LayerAction}\n     * @returns {string}\n     */\n    getOpenSourceString(layerType) {\n        const encodedPublicID = this.encodeAssetPublicID(this._publicID);\n        if (this._format) {\n            return `${layerType}_${encodedPublicID}.${this._format.toString()}`;\n        }\n        else {\n            return `${layerType}_${encodedPublicID}`;\n        }\n    }\n    /**\n     * @description\n     * Apply a format for the image source of the layer\n     * @param {FormatQualifier} format A to apply to the layered image, see more {@link Qualifiers.Format|here}\n     * @returns {this}\n     */\n    format(format) {\n        this._format = format;\n        return this;\n    }\n}\nexport { ImageSource };\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,eAAe;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,WAAW,SAASD,UAAU,CAAC;EACjCE,WAAWA,CAACC,QAAQ,EAAE;IAClB,KAAK,CAAC,CAAC;IACP,IAAI,CAACC,SAAS,GAAGD,QAAQ;EAC7B;EACA;AACJ;AACA;AACA;AACA;AACA;EACIE,mBAAmBA,CAACC,SAAS,EAAE;IAC3B,MAAMC,eAAe,GAAG,IAAI,CAACC,mBAAmB,CAAC,IAAI,CAACJ,SAAS,CAAC;IAChE,IAAI,IAAI,CAACK,OAAO,EAAE;MACd,OAAQ,GAAEH,SAAU,IAAGC,eAAgB,IAAG,IAAI,CAACE,OAAO,CAACC,QAAQ,CAAC,CAAE,EAAC;IACvE,CAAC,MACI;MACD,OAAQ,GAAEJ,SAAU,IAAGC,eAAgB,EAAC;IAC5C;EACJ;EACA;AACJ;AACA;AACA;AACA;AACA;EACII,MAAMA,CAACA,MAAM,EAAE;IACX,IAAI,CAACF,OAAO,GAAGE,MAAM;IACrB,OAAO,IAAI;EACf;AACJ;AACA,SAASV,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}