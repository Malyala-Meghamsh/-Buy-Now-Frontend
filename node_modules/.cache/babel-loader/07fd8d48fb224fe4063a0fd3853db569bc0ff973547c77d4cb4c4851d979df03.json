{"ast":null,"code":"import { Action } from \"../../internal/Action\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue\";\n/**\n * @extends SDK.Action\n * @memberOf Actions.Transcode\n * @description  Defines the video bitrate in bits per second.\n *\n * <b>Learn more</b>: {@link https://cloudinary.com/documentation/video_manipulation_and_delivery#bitrate_control | Bitrate control}\n * @see Visit {@link Actions.Transcode|Transcode} for an example\n */\nclass BitRateAction extends Action {\n  constructor(bitRate) {\n    super();\n    this.isConstant = false;\n    this.bitRate = bitRate;\n  }\n  /**\n   * @description video plays with a constant bitrate (CBR).\n   */\n  constant() {\n    this.isConstant = true;\n    return this;\n  }\n  prepareQualifiers() {\n    let qualifierValue;\n    if (this.isConstant) {\n      qualifierValue = new QualifierValue([this.bitRate, 'constant']).setDelimiter(':');\n    } else {\n      qualifierValue = new QualifierValue(this.bitRate);\n    }\n    this.addQualifier(new Qualifier('br', qualifierValue));\n    return this;\n  }\n}\nexport default BitRateAction;","map":{"version":3,"names":["Action","Qualifier","QualifierValue","BitRateAction","constructor","bitRate","isConstant","constant","prepareQualifiers","qualifierValue","setDelimiter","addQualifier"],"sources":["D:/VSCode/Project_Market_Place/client/node_modules/@cloudinary/base/actions/transcode/BitRateAction.js"],"sourcesContent":["import { Action } from \"../../internal/Action\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue\";\n/**\n * @extends SDK.Action\n * @memberOf Actions.Transcode\n * @description  Defines the video bitrate in bits per second.\n *\n * <b>Learn more</b>: {@link https://cloudinary.com/documentation/video_manipulation_and_delivery#bitrate_control | Bitrate control}\n * @see Visit {@link Actions.Transcode|Transcode} for an example\n */\nclass BitRateAction extends Action {\n    constructor(bitRate) {\n        super();\n        this.isConstant = false;\n        this.bitRate = bitRate;\n    }\n    /**\n     * @description video plays with a constant bitrate (CBR).\n     */\n    constant() {\n        this.isConstant = true;\n        return this;\n    }\n    prepareQualifiers() {\n        let qualifierValue;\n        if (this.isConstant) {\n            qualifierValue = new QualifierValue([this.bitRate, 'constant']).setDelimiter(':');\n        }\n        else {\n            qualifierValue = new QualifierValue(this.bitRate);\n        }\n        this.addQualifier(new Qualifier('br', qualifierValue));\n        return this;\n    }\n}\nexport default BitRateAction;\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,uBAAuB;AAC9C,SAASC,SAAS,QAAQ,oCAAoC;AAC9D,SAASC,cAAc,QAAQ,yCAAyC;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,aAAa,SAASH,MAAM,CAAC;EAC/BI,WAAWA,CAACC,OAAO,EAAE;IACjB,KAAK,CAAC,CAAC;IACP,IAAI,CAACC,UAAU,GAAG,KAAK;IACvB,IAAI,CAACD,OAAO,GAAGA,OAAO;EAC1B;EACA;AACJ;AACA;EACIE,QAAQA,CAAA,EAAG;IACP,IAAI,CAACD,UAAU,GAAG,IAAI;IACtB,OAAO,IAAI;EACf;EACAE,iBAAiBA,CAAA,EAAG;IAChB,IAAIC,cAAc;IAClB,IAAI,IAAI,CAACH,UAAU,EAAE;MACjBG,cAAc,GAAG,IAAIP,cAAc,CAAC,CAAC,IAAI,CAACG,OAAO,EAAE,UAAU,CAAC,CAAC,CAACK,YAAY,CAAC,GAAG,CAAC;IACrF,CAAC,MACI;MACDD,cAAc,GAAG,IAAIP,cAAc,CAAC,IAAI,CAACG,OAAO,CAAC;IACrD;IACA,IAAI,CAACM,YAAY,CAAC,IAAIV,SAAS,CAAC,IAAI,EAAEQ,cAAc,CAAC,CAAC;IACtD,OAAO,IAAI;EACf;AACJ;AACA,eAAeN,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}