{"ast":null,"code":"import { lossy, preserveTransparency, progressive } from \"../../qualifiers/flag\";\nimport { DeliveryAction } from \"./DeliveryAction\";\nimport { ProgressiveQualifier } from \"../../qualifiers/progressive\";\n/**\n * @memberOf Actions.Delivery\n * @extends {Actions.Delivery.DeliveryAction}\n * @see Visit {@link Actions.Delivery|Delivery} for an example\n */\nclass DeliveryFormat extends DeliveryAction {\n  /**\n   * @description Uses lossy compression when delivering animated GIF files.\n   * @return {this}\n   */\n  lossy() {\n    this.addFlag(lossy());\n    return this;\n  }\n  /**\n   * @description Uses progressive compression when delivering JPG file format.\n   * @return {this}\n   */\n  progressive(mode) {\n    if (mode instanceof ProgressiveQualifier) {\n      this.addFlag(mode);\n    } else {\n      this.addFlag(progressive(mode));\n    }\n    return this;\n  }\n  /**\n   * @description Ensures that images with a transparency channel are delivered in PNG format.\n   */\n  preserveTransparency() {\n    this.addFlag(preserveTransparency());\n    return this;\n  }\n}\nexport { DeliveryFormat };","map":{"version":3,"names":["lossy","preserveTransparency","progressive","DeliveryAction","ProgressiveQualifier","DeliveryFormat","addFlag","mode"],"sources":["D:/VSCode/Project_Market_Place/client/node_modules/@cloudinary/base/actions/delivery/DeliveryFormat.js"],"sourcesContent":["import { lossy, preserveTransparency, progressive } from \"../../qualifiers/flag\";\nimport { DeliveryAction } from \"./DeliveryAction\";\nimport { ProgressiveQualifier } from \"../../qualifiers/progressive\";\n/**\n * @memberOf Actions.Delivery\n * @extends {Actions.Delivery.DeliveryAction}\n * @see Visit {@link Actions.Delivery|Delivery} for an example\n */\nclass DeliveryFormat extends DeliveryAction {\n    /**\n     * @description Uses lossy compression when delivering animated GIF files.\n     * @return {this}\n     */\n    lossy() {\n        this.addFlag(lossy());\n        return this;\n    }\n    /**\n     * @description Uses progressive compression when delivering JPG file format.\n     * @return {this}\n     */\n    progressive(mode) {\n        if (mode instanceof ProgressiveQualifier) {\n            this.addFlag(mode);\n        }\n        else {\n            this.addFlag(progressive(mode));\n        }\n        return this;\n    }\n    /**\n     * @description Ensures that images with a transparency channel are delivered in PNG format.\n     */\n    preserveTransparency() {\n        this.addFlag(preserveTransparency());\n        return this;\n    }\n}\nexport { DeliveryFormat };\n"],"mappings":"AAAA,SAASA,KAAK,EAAEC,oBAAoB,EAAEC,WAAW,QAAQ,uBAAuB;AAChF,SAASC,cAAc,QAAQ,kBAAkB;AACjD,SAASC,oBAAoB,QAAQ,8BAA8B;AACnE;AACA;AACA;AACA;AACA;AACA,MAAMC,cAAc,SAASF,cAAc,CAAC;EACxC;AACJ;AACA;AACA;EACIH,KAAKA,CAAA,EAAG;IACJ,IAAI,CAACM,OAAO,CAACN,KAAK,CAAC,CAAC,CAAC;IACrB,OAAO,IAAI;EACf;EACA;AACJ;AACA;AACA;EACIE,WAAWA,CAACK,IAAI,EAAE;IACd,IAAIA,IAAI,YAAYH,oBAAoB,EAAE;MACtC,IAAI,CAACE,OAAO,CAACC,IAAI,CAAC;IACtB,CAAC,MACI;MACD,IAAI,CAACD,OAAO,CAACJ,WAAW,CAACK,IAAI,CAAC,CAAC;IACnC;IACA,OAAO,IAAI;EACf;EACA;AACJ;AACA;EACIN,oBAAoBA,CAAA,EAAG;IACnB,IAAI,CAACK,OAAO,CAACL,oBAAoB,CAAC,CAAC,CAAC;IACpC,OAAO,IAAI;EACf;AACJ;AACA,SAASI,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}