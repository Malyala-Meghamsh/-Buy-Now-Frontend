{"ast":null,"code":"import { Qualifier } from \"../../../internal/qualifier/Qualifier\";\nimport { Action } from \"../../../internal/Action\";\n/**\n * @description The Action class of the blur Builder.\n * @extends SDK.Action\n * @memberOf Actions.Effect\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\nclass BlurAction extends Action {\n  constructor(strength) {\n    super();\n    this._strength = strength;\n  }\n  /**\n   * @description Specifies the region to blur.\n   * @param {NamedRegion} blurRegion\n   */\n  region(blurRegion) {\n    this._region = blurRegion;\n    return this;\n  }\n  /**\n   * @description Sets the strength of the blur effect.\n   * @param {number | string} strength\n   */\n  strength(strength) {\n    this._strength = strength;\n    return this;\n  }\n  prepareQualifiers() {\n    /*\n     * Blur with region is a unique object in this codebase.\n     * On top of Blur being an Action with Qualifiers,\n     * it also accepts a Qualifier called Region.\n     *\n     * This Qualifier is in itself composite of qualifiers (such as height, or width).\n     * The existence of Region changes the output of Blur in non traditional ways\n     * which forced this relatively ad-hoc implementation.\n     *\n     * Aside from all of that, all of the Qualifiers in the component should be alphabetized\n     * This happens naturally in the Action class,\n     * however since we're dealing with two levels of qualifiers (Blur and Region),\n     * these need to be merged.\n     *\n     * This function will merge the Region qualifiers with Blur\n     * and add all needed implicit qualifiers (like g_ocr_text).\n     * We're not using the full Gravity Qualifier here to prevent the code import for such a simplistic case\n     */\n    const str = this._strength ? `:${this._strength}` : '';\n    if ('_region' in this) {\n      const qualifiers = this._region.qualifiers;\n      // Copy qualifiers from the region \"action\" to the blur action\n      qualifiers.forEach(q => this.addQualifier(q));\n      if (this._region.regionType === 'named') {\n        this.addQualifier(new Qualifier('e', `blur_region${str}`));\n      }\n      if (this._region.regionType === 'ocr_text') {\n        this.addQualifier(new Qualifier('e', `blur_region${str}`));\n        this.addQualifier(new Qualifier('g', `ocr_text`));\n      }\n      if (this._region.regionType === 'faces') {\n        this.addQualifier(new Qualifier('e', `blur_faces${str}`));\n      }\n    } else {\n      this.addQualifier(new Qualifier('e', `blur${str}`));\n    }\n  }\n}\nexport { BlurAction };","map":{"version":3,"names":["Qualifier","Action","BlurAction","constructor","strength","_strength","region","blurRegion","_region","prepareQualifiers","str","qualifiers","forEach","q","addQualifier","regionType"],"sources":["D:/VSCode/Project_Market_Place/client/node_modules/@cloudinary/base/actions/effect/blur/blur.js"],"sourcesContent":["import { Qualifier } from \"../../../internal/qualifier/Qualifier\";\nimport { Action } from \"../../../internal/Action\";\n/**\n * @description The Action class of the blur Builder.\n * @extends SDK.Action\n * @memberOf Actions.Effect\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\nclass BlurAction extends Action {\n    constructor(strength) {\n        super();\n        this._strength = strength;\n    }\n    /**\n     * @description Specifies the region to blur.\n     * @param {NamedRegion} blurRegion\n     */\n    region(blurRegion) {\n        this._region = blurRegion;\n        return this;\n    }\n    /**\n     * @description Sets the strength of the blur effect.\n     * @param {number | string} strength\n     */\n    strength(strength) {\n        this._strength = strength;\n        return this;\n    }\n    prepareQualifiers() {\n        /*\n         * Blur with region is a unique object in this codebase.\n         * On top of Blur being an Action with Qualifiers,\n         * it also accepts a Qualifier called Region.\n         *\n         * This Qualifier is in itself composite of qualifiers (such as height, or width).\n         * The existence of Region changes the output of Blur in non traditional ways\n         * which forced this relatively ad-hoc implementation.\n         *\n         * Aside from all of that, all of the Qualifiers in the component should be alphabetized\n         * This happens naturally in the Action class,\n         * however since we're dealing with two levels of qualifiers (Blur and Region),\n         * these need to be merged.\n         *\n         * This function will merge the Region qualifiers with Blur\n         * and add all needed implicit qualifiers (like g_ocr_text).\n         * We're not using the full Gravity Qualifier here to prevent the code import for such a simplistic case\n         */\n        const str = this._strength ? `:${this._strength}` : '';\n        if ('_region' in this) {\n            const qualifiers = this._region.qualifiers;\n            // Copy qualifiers from the region \"action\" to the blur action\n            qualifiers.forEach((q) => this.addQualifier(q));\n            if (this._region.regionType === 'named') {\n                this.addQualifier(new Qualifier('e', `blur_region${str}`));\n            }\n            if (this._region.regionType === 'ocr_text') {\n                this.addQualifier(new Qualifier('e', `blur_region${str}`));\n                this.addQualifier(new Qualifier('g', `ocr_text`));\n            }\n            if (this._region.regionType === 'faces') {\n                this.addQualifier(new Qualifier('e', `blur_faces${str}`));\n            }\n        }\n        else {\n            this.addQualifier(new Qualifier('e', `blur${str}`));\n        }\n    }\n}\nexport { BlurAction };\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,uCAAuC;AACjE,SAASC,MAAM,QAAQ,0BAA0B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,UAAU,SAASD,MAAM,CAAC;EAC5BE,WAAWA,CAACC,QAAQ,EAAE;IAClB,KAAK,CAAC,CAAC;IACP,IAAI,CAACC,SAAS,GAAGD,QAAQ;EAC7B;EACA;AACJ;AACA;AACA;EACIE,MAAMA,CAACC,UAAU,EAAE;IACf,IAAI,CAACC,OAAO,GAAGD,UAAU;IACzB,OAAO,IAAI;EACf;EACA;AACJ;AACA;AACA;EACIH,QAAQA,CAACA,QAAQ,EAAE;IACf,IAAI,CAACC,SAAS,GAAGD,QAAQ;IACzB,OAAO,IAAI;EACf;EACAK,iBAAiBA,CAAA,EAAG;IAChB;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQ,MAAMC,GAAG,GAAG,IAAI,CAACL,SAAS,GAAI,IAAG,IAAI,CAACA,SAAU,EAAC,GAAG,EAAE;IACtD,IAAI,SAAS,IAAI,IAAI,EAAE;MACnB,MAAMM,UAAU,GAAG,IAAI,CAACH,OAAO,CAACG,UAAU;MAC1C;MACAA,UAAU,CAACC,OAAO,CAAEC,CAAC,IAAK,IAAI,CAACC,YAAY,CAACD,CAAC,CAAC,CAAC;MAC/C,IAAI,IAAI,CAACL,OAAO,CAACO,UAAU,KAAK,OAAO,EAAE;QACrC,IAAI,CAACD,YAAY,CAAC,IAAId,SAAS,CAAC,GAAG,EAAG,cAAaU,GAAI,EAAC,CAAC,CAAC;MAC9D;MACA,IAAI,IAAI,CAACF,OAAO,CAACO,UAAU,KAAK,UAAU,EAAE;QACxC,IAAI,CAACD,YAAY,CAAC,IAAId,SAAS,CAAC,GAAG,EAAG,cAAaU,GAAI,EAAC,CAAC,CAAC;QAC1D,IAAI,CAACI,YAAY,CAAC,IAAId,SAAS,CAAC,GAAG,EAAG,UAAS,CAAC,CAAC;MACrD;MACA,IAAI,IAAI,CAACQ,OAAO,CAACO,UAAU,KAAK,OAAO,EAAE;QACrC,IAAI,CAACD,YAAY,CAAC,IAAId,SAAS,CAAC,GAAG,EAAG,aAAYU,GAAI,EAAC,CAAC,CAAC;MAC7D;IACJ,CAAC,MACI;MACD,IAAI,CAACI,YAAY,CAAC,IAAId,SAAS,CAAC,GAAG,EAAG,OAAMU,GAAI,EAAC,CAAC,CAAC;IACvD;EACJ;AACJ;AACA,SAASR,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}