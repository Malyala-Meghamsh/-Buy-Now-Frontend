{"ast":null,"code":"import { Action } from \"../../internal/Action\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier\";\n/**\n * @description Simulates the way an image would appear to someone with the specified color blind condition\n * @extends SDK.Action\n * @memberOf Actions.Effect\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\nclass SimulateColorBlindEffectAction extends Action {\n  constructor() {\n    super();\n    this.addQualifier(new Qualifier('e', `simulate_colorblind`));\n  }\n  setQualifier(val) {\n    const strToAppend = `:${val}`;\n    if (val) {\n      this.addQualifier(new Qualifier('e', `simulate_colorblind${strToAppend}`));\n    }\n    return this;\n  }\n  /**\n   * @description Sets the color blind condition to simulate.\n   * @param {Qualifiers.simulateColorBlindValues | string} cond\n   * @return {this}\n   */\n  condition(cond) {\n    return this.setQualifier(cond);\n  }\n}\nexport { SimulateColorBlindEffectAction };","map":{"version":3,"names":["Action","Qualifier","SimulateColorBlindEffectAction","constructor","addQualifier","setQualifier","val","strToAppend","condition","cond"],"sources":["D:/VSCode/Project_Market_Place/client/node_modules/@cloudinary/base/actions/effect/simulateColorBlind.js"],"sourcesContent":["import { Action } from \"../../internal/Action\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier\";\n/**\n * @description Simulates the way an image would appear to someone with the specified color blind condition\n * @extends SDK.Action\n * @memberOf Actions.Effect\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\nclass SimulateColorBlindEffectAction extends Action {\n    constructor() {\n        super();\n        this.addQualifier(new Qualifier('e', `simulate_colorblind`));\n    }\n    setQualifier(val) {\n        const strToAppend = `:${val}`;\n        if (val) {\n            this.addQualifier(new Qualifier('e', `simulate_colorblind${strToAppend}`));\n        }\n        return this;\n    }\n    /**\n     * @description Sets the color blind condition to simulate.\n     * @param {Qualifiers.simulateColorBlindValues | string} cond\n     * @return {this}\n     */\n    condition(cond) {\n        return this.setQualifier(cond);\n    }\n}\nexport { SimulateColorBlindEffectAction };\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,uBAAuB;AAC9C,SAASC,SAAS,QAAQ,oCAAoC;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,8BAA8B,SAASF,MAAM,CAAC;EAChDG,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC,CAAC;IACP,IAAI,CAACC,YAAY,CAAC,IAAIH,SAAS,CAAC,GAAG,EAAG,qBAAoB,CAAC,CAAC;EAChE;EACAI,YAAYA,CAACC,GAAG,EAAE;IACd,MAAMC,WAAW,GAAI,IAAGD,GAAI,EAAC;IAC7B,IAAIA,GAAG,EAAE;MACL,IAAI,CAACF,YAAY,CAAC,IAAIH,SAAS,CAAC,GAAG,EAAG,sBAAqBM,WAAY,EAAC,CAAC,CAAC;IAC9E;IACA,OAAO,IAAI;EACf;EACA;AACJ;AACA;AACA;AACA;EACIC,SAASA,CAACC,IAAI,EAAE;IACZ,OAAO,IAAI,CAACJ,YAAY,CAACI,IAAI,CAAC;EAClC;AACJ;AACA,SAASP,8BAA8B"},"metadata":{},"sourceType":"module","externalDependencies":[]}