{"ast":null,"code":"import { Action } from \"../../internal/Action\";\nimport { FlagQualifier } from \"../../qualifiers/flag/FlagQualifier\";\n/**\n * @extends SDK.Action\n * @memberOf SDK\n * @description\n * A generic Layer action that can add a Video, Text or Image layer.<br>\n * This class can represent an overlay or an underlay.\n */\nclass LayerAction extends Action {\n  /**\n   * @description Creates a LayerAction to be used with overlays and underlays\n   * @param {ImageSource | TextSource | VideoSource} layerSource The Source used for the layer, use the builders provided {@link Qualifiers.Source|here}\n   */\n  constructor(layerSource) {\n    super();\n    this.source = layerSource;\n  }\n  /**\n   * @description Sets the layerType to 'u' (underlay) or 'l' (overlay).\n   * @param {'u' | 'l'} type\n   * @return {this}\n   */\n  setLayerType(type) {\n    this.layerType = type;\n    return this;\n  }\n  /**\n   * @description Sets the timeline position of the video layer\n   * @param {Qualifiers.TimelinePosition} timelinePosition\n   * @return {this}\n   */\n  timeline(timelinePosition) {\n    this._timelinePosition = timelinePosition;\n    return this;\n  }\n  /**\n   * @description Sets the position of the layer\n   * @param {Qualifiers.Position} position\n   * @return {this}\n   */\n  position(position) {\n    this._position = position;\n    return this;\n  }\n  /**\n   * @description Specifies how to blend the image overlay with the base overlay\n   * @param {Qualifiers.BlendMode} blendMode\n   * @return {this}\n   */\n  blendMode(blendMode) {\n    this._blendMode = blendMode;\n    return this;\n  }\n  /**\n   * @private\n   * @description\n   * Closes a layer (layers are built in three stages -> /Open/Transform/Close).\n   * @return {SDK.Action}\n   */\n  closeLayer() {\n    var _a, _b, _c, _d;\n    const bit = new Action().addFlag(new FlagQualifier('layer_apply'));\n    (_a = this._position) === null || _a === void 0 ? void 0 : _a.qualifiers.forEach(qualifier => {\n      bit.addQualifier(qualifier);\n    });\n    // Flags are stored separately from qualifiers, we need to add those as well\n    (_b = this._position) === null || _b === void 0 ? void 0 : _b.flags.forEach(flag => {\n      bit.addFlag(flag);\n    });\n    (_c = this._blendMode) === null || _c === void 0 ? void 0 : _c.qualifiers.forEach(qualifier => {\n      bit.addQualifier(qualifier);\n    });\n    (_d = this._timelinePosition) === null || _d === void 0 ? void 0 : _d.qualifiers.forEach(qualifier => {\n      bit.addQualifier(qualifier);\n    });\n    return bit;\n  }\n  /**\n   * @private\n   * @description\n   * Opens a layer (layers are built in three stages -> /Open/Transform/Close).\n   * @return string\n   */\n  openLayer() {\n    return `${this.source.getOpenSourceString(this.layerType)}`;\n  }\n  /**\n   * @description\n   * Serializes the Layer to a string\n   * @return {string}\n   */\n  toString() {\n    return [this.openLayer(), this.source.getTransformation() && this.source.getTransformation().toString(), this.closeLayer()].filter(a => a).join('/');\n  }\n}\nexport { LayerAction };","map":{"version":3,"names":["Action","FlagQualifier","LayerAction","constructor","layerSource","source","setLayerType","type","layerType","timeline","timelinePosition","_timelinePosition","position","_position","blendMode","_blendMode","closeLayer","_a","_b","_c","_d","bit","addFlag","qualifiers","forEach","qualifier","addQualifier","flags","flag","openLayer","getOpenSourceString","toString","getTransformation","filter","a","join"],"sources":["D:/VSCode/Project_Market_Place/client/node_modules/@cloudinary/base/actions/layer/LayerAction.js"],"sourcesContent":["import { Action } from \"../../internal/Action\";\nimport { FlagQualifier } from \"../../qualifiers/flag/FlagQualifier\";\n/**\n * @extends SDK.Action\n * @memberOf SDK\n * @description\n * A generic Layer action that can add a Video, Text or Image layer.<br>\n * This class can represent an overlay or an underlay.\n */\nclass LayerAction extends Action {\n    /**\n     * @description Creates a LayerAction to be used with overlays and underlays\n     * @param {ImageSource | TextSource | VideoSource} layerSource The Source used for the layer, use the builders provided {@link Qualifiers.Source|here}\n     */\n    constructor(layerSource) {\n        super();\n        this.source = layerSource;\n    }\n    /**\n     * @description Sets the layerType to 'u' (underlay) or 'l' (overlay).\n     * @param {'u' | 'l'} type\n     * @return {this}\n     */\n    setLayerType(type) {\n        this.layerType = type;\n        return this;\n    }\n    /**\n     * @description Sets the timeline position of the video layer\n     * @param {Qualifiers.TimelinePosition} timelinePosition\n     * @return {this}\n     */\n    timeline(timelinePosition) {\n        this._timelinePosition = timelinePosition;\n        return this;\n    }\n    /**\n     * @description Sets the position of the layer\n     * @param {Qualifiers.Position} position\n     * @return {this}\n     */\n    position(position) {\n        this._position = position;\n        return this;\n    }\n    /**\n     * @description Specifies how to blend the image overlay with the base overlay\n     * @param {Qualifiers.BlendMode} blendMode\n     * @return {this}\n     */\n    blendMode(blendMode) {\n        this._blendMode = blendMode;\n        return this;\n    }\n    /**\n     * @private\n     * @description\n     * Closes a layer (layers are built in three stages -> /Open/Transform/Close).\n     * @return {SDK.Action}\n     */\n    closeLayer() {\n        var _a, _b, _c, _d;\n        const bit = new Action().addFlag(new FlagQualifier('layer_apply'));\n        (_a = this._position) === null || _a === void 0 ? void 0 : _a.qualifiers.forEach((qualifier) => {\n            bit.addQualifier(qualifier);\n        });\n        // Flags are stored separately from qualifiers, we need to add those as well\n        (_b = this._position) === null || _b === void 0 ? void 0 : _b.flags.forEach((flag) => {\n            bit.addFlag(flag);\n        });\n        (_c = this._blendMode) === null || _c === void 0 ? void 0 : _c.qualifiers.forEach((qualifier) => {\n            bit.addQualifier(qualifier);\n        });\n        (_d = this._timelinePosition) === null || _d === void 0 ? void 0 : _d.qualifiers.forEach((qualifier) => {\n            bit.addQualifier(qualifier);\n        });\n        return bit;\n    }\n    /**\n     * @private\n     * @description\n     * Opens a layer (layers are built in three stages -> /Open/Transform/Close).\n     * @return string\n     */\n    openLayer() {\n        return `${this.source.getOpenSourceString(this.layerType)}`;\n    }\n    /**\n     * @description\n     * Serializes the Layer to a string\n     * @return {string}\n     */\n    toString() {\n        return [\n            this.openLayer(),\n            this.source.getTransformation() && this.source.getTransformation().toString(),\n            this.closeLayer()\n        ].filter((a) => a).join('/');\n    }\n}\nexport { LayerAction };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}