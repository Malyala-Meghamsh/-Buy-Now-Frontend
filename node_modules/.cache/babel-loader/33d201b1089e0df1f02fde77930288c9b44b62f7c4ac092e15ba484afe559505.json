{"ast":null,"code":"import { Action } from \"../../internal/Action\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue\";\n/**\n * @extends SDK.Action\n * @memberOf Actions.Transcode\n * @description Controls the range of acceptable FPS (Frames Per Second) to ensure that video (even when optimized)\n * is delivered with\n * an expected FPS level (helps with sync to audio).\n *\n * <b>Learn more</b>: {@link https://cloudinary.com/documentation/video_transformation_reference#video_settings | Video settings}\n * @see Visit {@link Actions.Transcode|Transcode} for an example\n */\nclass FPSRangeAction extends Action {\n  constructor(from, to) {\n    super();\n    this.from = from;\n    this.to = to;\n  }\n  prepareQualifiers() {\n    let qualifierValue;\n    if (this.from && this.to) {\n      qualifierValue = new QualifierValue(`${this.from}-${this.to}`);\n    } else {\n      qualifierValue = new QualifierValue(`${this.from}-`);\n    }\n    this.addQualifier(new Qualifier('fps', qualifierValue));\n    return this;\n  }\n}\nexport default FPSRangeAction;","map":{"version":3,"names":["Action","Qualifier","QualifierValue","FPSRangeAction","constructor","from","to","prepareQualifiers","qualifierValue","addQualifier"],"sources":["D:/VSCode/Project_Market_Place/client/node_modules/@cloudinary/base/actions/transcode/FPSRangeAction.js"],"sourcesContent":["import { Action } from \"../../internal/Action\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue\";\n/**\n * @extends SDK.Action\n * @memberOf Actions.Transcode\n * @description Controls the range of acceptable FPS (Frames Per Second) to ensure that video (even when optimized)\n * is delivered with\n * an expected FPS level (helps with sync to audio).\n *\n * <b>Learn more</b>: {@link https://cloudinary.com/documentation/video_transformation_reference#video_settings | Video settings}\n * @see Visit {@link Actions.Transcode|Transcode} for an example\n */\nclass FPSRangeAction extends Action {\n    constructor(from, to) {\n        super();\n        this.from = from;\n        this.to = to;\n    }\n    prepareQualifiers() {\n        let qualifierValue;\n        if (this.from && this.to) {\n            qualifierValue = new QualifierValue(`${this.from}-${this.to}`);\n        }\n        else {\n            qualifierValue = new QualifierValue(`${this.from}-`);\n        }\n        this.addQualifier(new Qualifier('fps', qualifierValue));\n        return this;\n    }\n}\nexport default FPSRangeAction;\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,uBAAuB;AAC9C,SAASC,SAAS,QAAQ,oCAAoC;AAC9D,SAASC,cAAc,QAAQ,yCAAyC;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,cAAc,SAASH,MAAM,CAAC;EAChCI,WAAWA,CAACC,IAAI,EAAEC,EAAE,EAAE;IAClB,KAAK,CAAC,CAAC;IACP,IAAI,CAACD,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,EAAE,GAAGA,EAAE;EAChB;EACAC,iBAAiBA,CAAA,EAAG;IAChB,IAAIC,cAAc;IAClB,IAAI,IAAI,CAACH,IAAI,IAAI,IAAI,CAACC,EAAE,EAAE;MACtBE,cAAc,GAAG,IAAIN,cAAc,CAAE,GAAE,IAAI,CAACG,IAAK,IAAG,IAAI,CAACC,EAAG,EAAC,CAAC;IAClE,CAAC,MACI;MACDE,cAAc,GAAG,IAAIN,cAAc,CAAE,GAAE,IAAI,CAACG,IAAK,GAAE,CAAC;IACxD;IACA,IAAI,CAACI,YAAY,CAAC,IAAIR,SAAS,CAAC,KAAK,EAAEO,cAAc,CAAC,CAAC;IACvD,OAAO,IAAI;EACf;AACJ;AACA,eAAeL,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}