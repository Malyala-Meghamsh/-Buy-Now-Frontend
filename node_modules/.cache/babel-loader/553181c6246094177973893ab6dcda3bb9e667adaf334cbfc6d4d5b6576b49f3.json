{"ast":null,"code":"import { QualifierValue } from \"../../internal/qualifier/QualifierValue\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier\";\nimport { prepareColor } from \"../../internal/utils/prepareColor\";\nimport { EffectActionWithLevel } from \"./EffectActions/EffectActionWithLevel\";\n/**\n * @description Applies a colorizing filter to the asset, use the methods in the class to adjust the filter\n * @extends EffectActionWithLevel\n * @memberOf Actions.Effect\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\nclass ColorizeEffectAction extends EffectActionWithLevel {\n  /**\n   * @description The color to use for colorization. Specify HTML name or RGB hex code. (Server default: gray)\n   * @param {string} color HTML name(red, green, etc.) or RGB hex code. (Server default: gray)\n   * @return {this}\n   */\n  color(color) {\n    return this.addQualifier(new Qualifier('co', new QualifierValue(prepareColor(color))));\n  }\n}\nexport { ColorizeEffectAction };","map":{"version":3,"names":["QualifierValue","Qualifier","prepareColor","EffectActionWithLevel","ColorizeEffectAction","color","addQualifier"],"sources":["D:/VSCode/Project_Market_Place/client/node_modules/@cloudinary/base/actions/effect/colorize.js"],"sourcesContent":["import { QualifierValue } from \"../../internal/qualifier/QualifierValue\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier\";\nimport { prepareColor } from \"../../internal/utils/prepareColor\";\nimport { EffectActionWithLevel } from \"./EffectActions/EffectActionWithLevel\";\n/**\n * @description Applies a colorizing filter to the asset, use the methods in the class to adjust the filter\n * @extends EffectActionWithLevel\n * @memberOf Actions.Effect\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\nclass ColorizeEffectAction extends EffectActionWithLevel {\n    /**\n     * @description The color to use for colorization. Specify HTML name or RGB hex code. (Server default: gray)\n     * @param {string} color HTML name(red, green, etc.) or RGB hex code. (Server default: gray)\n     * @return {this}\n     */\n    color(color) {\n        return this.addQualifier(new Qualifier('co', new QualifierValue(prepareColor(color))));\n    }\n}\nexport { ColorizeEffectAction };\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,yCAAyC;AACxE,SAASC,SAAS,QAAQ,oCAAoC;AAC9D,SAASC,YAAY,QAAQ,mCAAmC;AAChE,SAASC,qBAAqB,QAAQ,uCAAuC;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,oBAAoB,SAASD,qBAAqB,CAAC;EACrD;AACJ;AACA;AACA;AACA;EACIE,KAAKA,CAACA,KAAK,EAAE;IACT,OAAO,IAAI,CAACC,YAAY,CAAC,IAAIL,SAAS,CAAC,IAAI,EAAE,IAAID,cAAc,CAACE,YAAY,CAACG,KAAK,CAAC,CAAC,CAAC,CAAC;EAC1F;AACJ;AACA,SAASD,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}