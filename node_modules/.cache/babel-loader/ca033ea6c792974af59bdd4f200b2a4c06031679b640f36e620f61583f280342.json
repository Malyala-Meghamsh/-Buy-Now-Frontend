{"ast":null,"code":"import { Action } from \"../../internal/Action\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier\";\nimport { prepareColor } from \"../../internal/utils/prepareColor\";\n/**\n * @description Adds an outline to a transparent image. For examples, see the Image Transformations guide.\n * @extends SDK.Action\n * @memberOf Actions.Effect\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\nclass EffectOutline extends Action {\n  constructor() {\n    super();\n  }\n  /**\n   * @description\n   * How to apply the outline effect which can be one of the following values:\n   * inner, inner_fill, outer, fill.\n   * @param {string} mode  The type of outline effect. Use the constants defined in Outline.\n   * @return {this}\n   */\n  mode(mode) {\n    this._mode = mode;\n    return this;\n  }\n  /**\n   * The thickness of the outline in pixels. (Range: 1 to 100, Server default: 5)\n   * @param {number} width\n   * @return {this}\n   */\n  width(width) {\n    this._width = width;\n    return this;\n  }\n  /**\n   * @description\n   * The level of blur of the outline.\n   * Range: 0 to 2000, Server default: 0\n   * @param {number | string} lvl\n   * @return {this}\n   */\n  blurLevel(lvl) {\n    this._blurLevel = lvl;\n    return this;\n  }\n  /**\n   * @param {string | Qualifiers.Color} color One of the SDK Color values, string, or rgba: '#fff'\n   * @return {this}\n   */\n  color(color) {\n    return this.addQualifier(new Qualifier('co', prepareColor(color)));\n  }\n  prepareQualifiers() {\n    this.addQualifier(new Qualifier('e', new QualifierValue(['outline', this._mode, this._width, this._blurLevel]).setDelimiter(':')));\n  }\n}\nexport { EffectOutline };","map":{"version":3,"names":["Action","QualifierValue","Qualifier","prepareColor","EffectOutline","constructor","mode","_mode","width","_width","blurLevel","lvl","_blurLevel","color","addQualifier","prepareQualifiers","setDelimiter"],"sources":["D:/VSCode/Project_Market_Place/client/node_modules/@cloudinary/base/actions/effect/outline.js"],"sourcesContent":["import { Action } from \"../../internal/Action\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier\";\nimport { prepareColor } from \"../../internal/utils/prepareColor\";\n/**\n * @description Adds an outline to a transparent image. For examples, see the Image Transformations guide.\n * @extends SDK.Action\n * @memberOf Actions.Effect\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\nclass EffectOutline extends Action {\n    constructor() {\n        super();\n    }\n    /**\n     * @description\n     * How to apply the outline effect which can be one of the following values:\n     * inner, inner_fill, outer, fill.\n     * @param {string} mode  The type of outline effect. Use the constants defined in Outline.\n     * @return {this}\n     */\n    mode(mode) {\n        this._mode = mode;\n        return this;\n    }\n    /**\n     * The thickness of the outline in pixels. (Range: 1 to 100, Server default: 5)\n     * @param {number} width\n     * @return {this}\n     */\n    width(width) {\n        this._width = width;\n        return this;\n    }\n    /**\n     * @description\n     * The level of blur of the outline.\n     * Range: 0 to 2000, Server default: 0\n     * @param {number | string} lvl\n     * @return {this}\n     */\n    blurLevel(lvl) {\n        this._blurLevel = lvl;\n        return this;\n    }\n    /**\n     * @param {string | Qualifiers.Color} color One of the SDK Color values, string, or rgba: '#fff'\n     * @return {this}\n     */\n    color(color) {\n        return this.addQualifier(new Qualifier('co', prepareColor(color)));\n    }\n    prepareQualifiers() {\n        this.addQualifier(new Qualifier('e', new QualifierValue(['outline', this._mode, this._width, this._blurLevel]).setDelimiter(':')));\n    }\n}\nexport { EffectOutline };\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,uBAAuB;AAC9C,SAASC,cAAc,QAAQ,yCAAyC;AACxE,SAASC,SAAS,QAAQ,oCAAoC;AAC9D,SAASC,YAAY,QAAQ,mCAAmC;AAChE;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,aAAa,SAASJ,MAAM,CAAC;EAC/BK,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC,CAAC;EACX;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACIC,IAAIA,CAACA,IAAI,EAAE;IACP,IAAI,CAACC,KAAK,GAAGD,IAAI;IACjB,OAAO,IAAI;EACf;EACA;AACJ;AACA;AACA;AACA;EACIE,KAAKA,CAACA,KAAK,EAAE;IACT,IAAI,CAACC,MAAM,GAAGD,KAAK;IACnB,OAAO,IAAI;EACf;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACIE,SAASA,CAACC,GAAG,EAAE;IACX,IAAI,CAACC,UAAU,GAAGD,GAAG;IACrB,OAAO,IAAI;EACf;EACA;AACJ;AACA;AACA;EACIE,KAAKA,CAACA,KAAK,EAAE;IACT,OAAO,IAAI,CAACC,YAAY,CAAC,IAAIZ,SAAS,CAAC,IAAI,EAAEC,YAAY,CAACU,KAAK,CAAC,CAAC,CAAC;EACtE;EACAE,iBAAiBA,CAAA,EAAG;IAChB,IAAI,CAACD,YAAY,CAAC,IAAIZ,SAAS,CAAC,GAAG,EAAE,IAAID,cAAc,CAAC,CAAC,SAAS,EAAE,IAAI,CAACM,KAAK,EAAE,IAAI,CAACE,MAAM,EAAE,IAAI,CAACG,UAAU,CAAC,CAAC,CAACI,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC;EACtI;AACJ;AACA,SAASZ,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}